# General configuration

version: 1.0.{build}

branches:
  only:
    - master

skip_tags: true

# Environment configuration

image: Visual Studio 2019

init:
  - git config --global core.autocrlf true

clone_depth: 1

# Build configuration

configuration: Release

before_build:
  - dotnet --version
  - dotnet restore --verbosity m
  - nuget restore

build_script:
  - dotnet publish

after_build:
  - choco install opencover.portable
  - choco install codecov

# Tests configuration

test_script:
  - OpenCover.Console.exe
    -target:"C:\Program Files\dotnet\dotnet.exe"
    -targetargs:"test"
    -output:coverage.xml
    -oldStyle
    -filter:"+[Pecuniary.Account.Command*]* -[Pecuniary.Account.Tests*]*"
    -register:user
  - codecov -f "coverage.xml"

# Artifacts configuration

artifacts:
  - path: \Pecuniary.Account.Command\bin\Release\netcoreapp2.1\publish
    name: artifact
    type: zip

# Deployment configuration

before_deploy:
  - ps: Write-Host "Installing AWS CLI..." -ForegroundColor Cyan
  - ps: $msiPath = "$($env:USERPROFILE)\AWSCLI64.msi"
  - ps: (New-Object Net.WebClient).DownloadFile('https://s3.amazonaws.com/aws-cli/AWSCLI64.msi', $msiPath)
  - ps: Write-Host "Installing..."
  - ps: cmd /c start /wait msiexec /i $msiPath /quiet
  - ps: del $msiPath

deploy_script:
    #- cmd: pip3 install awscli --upgrade --user
    - cmd: dotnet tool install -g Amazon.Lambda.Tools
    - cmd: aws --version
    - cmd: aws configure set aws_access_key_id $(ACCESS_ID)
    - cmd: aws configure set aws_secret_access_key $(secret_key)
    #- deploySamTemplate.ps1
