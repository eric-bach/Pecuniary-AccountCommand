version: '1.0.{build}'
image: Visual Studio 2019
branches:
  only:
  - master
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
install:
  # Install repo specific stuff here
before_build:
  # Display .NET Core version
  - cmd: dotnet --version
  # Display minimal restore text
  - cmd: dotnet restore --verbosity m
  - nuget install OpenCover -OutputDirectory packages -Version 4.6.519
build_script:
  # output will be in ./src/bin/debug/netcoreapp1.1/publish
  - cmd: dotnet publish
after_build:
  # For once the build has completed
artifacts:
 - path: '\Pecuniary.Account.Command\bin\Debug\netcoreapp2.1\publish'
   name: artifact
   type: zip
clone_depth: 1
test_script:
  # restore packages for our unit tests
   - cmd: dotnet restore ./Pecuniary.Account.Tests/Pecuniary.Account.Tests.csproj --verbosity m
   # run the unit tests (requires changing into the test directory)
   - cmd: cd Pecuniary.Account.Tests
   - cmd: dotnet test
   - .\packages\OpenCover.4.6.519\tools\OpenCover.Console.exe -register:user -target:"C:/Program Files/dotnet/dotnet.exe" -targetargs:"test --logger:trx;LogFileName=results.trx /p:DebugType=full ./Pecuniary.Account.Tests/Pecuniary.Account.Tests.csproj " -output:"coverage.xml" -filter:"+[LetsDisc*]* -[Tests*]*"
after_test:
  - ps: |
      $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
      Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
      bash codecov.sh -f "coverage.xml"
on_finish :
  # any cleanup in here
deploy: off


#CODECOV_TOKEN="2ba56872-eb44-4180-ae2d-1fc19c4183e5"